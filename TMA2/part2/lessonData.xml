<?xml version='1.0' encoding='UTF-8'?>
<Lesson>
    <LessonName>Evans Copy Lesson</LessonName>
    <Author>Evan Timms</Author>
    <Introduction>
        <Title>Welcome to SimpleDev!</Title>
        <Paragraph>
        In this program, you will be introduced to some
        basic concepts about web development that are essential for every web developer to know.
        </Paragraph>
        <Paragraph>
        Before we being, lets take a look at some helpful
        tips to allow us to naviagate through the program.
        </Paragraph>
        <Paragraph>
        If at any point you wish to exit the program, you
        can do so by selecting the MENU button on the top navigation bar,
        where you will be able to select your desired content from the sidebar.
        </Paragraph>
        <Image>Menu_tips.jpg</Image>
        <Paragraph>
        Each unit will cover various specific topics, and
        will include a quiz to test you knowledge.
        </Paragraph>
        <Paragraph>
            The top navigation allows you to traverse through
            this program in any order you wish. At any point, you can review each unit, return to this
            tutorial, or if your ready take on the quizes!
        </Paragraph>
        <Image>Nav_tips.jpg</Image>

        <Paragraph>
            While reading through the different units, you can
            use the previous and next buttons located at the bottom of the
            page to traverse through different pages in the unit. Try pressing the next button below to
            begin with Unit 1!
        </Paragraph>
        <Paragraph>
            This concludes the tutorial! Good luck, and have
            fun!
        </Paragraph>
    </Introduction>
    <LessonContent>
        <Unit>
            <Page>
                <Title>Unit 1: HTML5, What is it, and how is it used?</Title>
                <Paragraph>HTML5 is a markup language that specifies the structure and content of documents that are displayed in web browsers.</Paragraph>
                <Paragraph>Think of it as a template that sets the layout for your website. For instance, SimpleDev follows a very simple layout. 
                    It has a naviation bar on the top of the page, a sidebar on the left side of the page, and a container in the middle that displays content to the user. 
                    This format is all layed out in the HTML5 used for this website.</Paragraph>
                <Paragraph>It also allows you to display, that is "markup", specific content to the user. This includes text, images, videos, and all sorts of content. 
                Everything you are reading in SimpleDev is being "marked up" by the html, allowing you to view the content.</Paragraph>
                <Paragraph>Now that we understand the basic uses of html, lets take a look at how to write it.</Paragraph>
            </Page>

            <Page>
                <Title>Unit 1: Basic HTML elements Part 1</Title>
                <Paragraph>To understand the basics of writing HTML, lets take a look at the following example.</Paragraph>
                <Image>U1_p2_i1.jpg</Image>
                <Paragraph>Every time an element is used, that same element must also have a corresponding ending tag.
                    Its in between these opening and closing tags, that content for the webpage can be placed. If you simply put text between the two tags, 
                    your web browser will understand that this is markup text, and will display that text in your web browser when the page is loaded. You also have the option to nest other opening
                    and closing tags. These nestings and groupings of tags are what allow you to create a layout for your webpage.
                    In the example above we see the the DOCTYPE html tag being used. This tag defines that the current document is in fact an html document. Its important to include this tag at the 
                    top of every html document, because it clarifies to the browser what the document is. Not all browsers require it, but in order to keep consistency between different browsers its 
                    reccomended to always include it. This declarating does not require a closing tag.</Paragraph>
            </Page>

            <Page>
                <Title>Unit 1: Basic HTML elements Part 2</Title>
                <Image>U1_p2_i1.JPG</Image>
                <Paragraph>
                
                
                    A comment in HTML is displayed as shown in the green text above.

                    A comment is ignored by all browsers. It is simply a tool used by readers of the document to help give information about the document.

                    The most important element in html is the html element

                    This tag is included in every html document. All content in the document must be placed in between the opening and closing tags

                    The next tag used in the example is the head tag.

                    It is in this tag, where information about the HTML5 document, such as the character set (UTF-8, the most popular character-encoding scheme for the web) is placed. 
                    The head tag also links the html file other special related documents, such as CSS and JavaScript files

                    The meta tag defines metadata related to the document. That is, data (information) about data. Things like character set, page description, keywords, author of the document, 
                    are what this tag describes. Metadata is not displayed in browsers, it is only used. Browsers will look at meta tags to understand how the webpage should dsiplay content. 
                    In the example above we see charset set to utf-8. So browsers will load this webpage, and understand that the utf-8 charset is to be used.

                    Charset is considered to be an attribute. Attributes are parameters belonging to certain elements, that can be assigned a value

                    Mulitple attributes can be assigned for a given element.
                </Paragraph>
            </Page>

            <Page>
                <Title>Unit 1: Basic HTML elements Part 3</Title>
                <Image>U1_p2_i1.JPG</Image>
                <Paragraph>
                    The title tag is another important tag.

                    You can only have one of these tags in a html document. It defines the title of the document.

                    This title can be viewed from the browsers title bar. This title is very important for browsers in that it allows serach engine algorithms to detect the webpage.

                    There is also the body tag.
                    It is within this tag that all the contents of the html documents you are reading are placed. For instance all the content you are reading in this unit, was placed within a body tag.

                    A body tag is unique to an html element. As such there can only be one of these tags in each document.

                    The final tag used in the example above is the paragraph tag.

                    The paragraph tag (p) states that the content inside the tag is intended to be a paragraph. Browsers automatically add a single blank line after a p element. 
                    The example has some text between these p tags. This means that when the webpage is loaded, the text "Welcome to HTML5!" will be displayed.

                    So, if we take the example document above, and load it in our browser, we would get the following web page:
                </Paragraph>
                <Image>U1_p4_i1.JPG</Image>
                <Paragraph>Thats it for the basic tags of html! You now have the basic knowledge and understanding to build a simple webpage! When you are ready, you can select the first quiz from 
                the navigation menu up top.</Paragraph>
            </Page>


        </Unit>

        <Unit>
            <Page>
                <Title>Unit 2: Basics of CSS and JavaScript Part 1</Title>
                <Paragraph>
                    In Unit 1, we talked about html and some of the basic html elements that are essential for every web developer to know. You may have noticed however that a 
                    website only written with html looks very generic with no styling whatsoever. This is where Cascading Style Sheets(CSS) comes into play. 
                    The purpose of the styling language CSS is to manipulate the different elements in your html code in order to give them a sense of style. 
                    That is, make the elements look much more appealing. Lets take a look at our previous example in Unit 1.
                </Paragraph>
                <Image>U1_p2_i1.JPG</Image>
                <Paragraph>The HTML code above would result in the following webpage when rendered by a browser.</Paragraph>
                <Image>U1_p4_i1.JPG</Image>
                <Paragraph>As we can see, the text being displayed isn't anything special. It's just plain black text that gets placed on the top left of the webpage by default. 
                    Lets use CSS to make this webpage look nicer.
                </Paragraph>
            </Page>

            <Page>
                <Title>Unit 2: Basics of CSS and JavaScript Part 2</Title>
                <Paragraph>CSS can be applied to your html code in one of 2 ways. The first is directly into an html file through the use of the style tag. 
                    This method is generally not reccomended, as it makes it difficult to reuse your styling in other html files. 
                    By today's standards its always reccomended to instead use the second method, which is to place the CSS code in a completely seperate file (.css extension). 
                    Lets create a seperate style.css file and walk through the file contents</Paragraph>
                <Image>U2_p2_i1.JPG</Image>
                <Paragraph>
                    CSS files contain collections of Selectors and their assigned attributes and values. A Selector allows you to target speciic HTML elements you want to style. 
                    Selectors can take many forms, but in SimpleDev we will only look at a few. In the example above, the selectors used are colored in yellow text. 
                    Each selector can be assigned its own unique properites and values. The image below shows the syntax for a selector and its properites
                </Paragraph>
                <Image>U2_p2_i2.JPG</Image>
                <Paragraph>One form a selector can take is that it can be named as a specific HTML element. 
                In the example above you can see the selectors body and header were used. This means whatever content is inside these html elements will have the properties specified 
                in the CSS file. In the case of body, the margin and color are specified. The margin property allows us to specify the minimum distance between the given element's 
                border and any outside content. Here we decide to set the top, right, bottom, and left margin to 0, meaning the body will not have a margin and fill the entire window 
                when rendered in the browser. The color property white is aso assigned to the body, stating that any text inside the body tags will be white, so long as the child 
                elements of body arent explicitly assigned their own colors. In the case of the header selector, a color is not assigned here, meaning if we place the header tag inside 
                the body tag in our HTML file, by default the header text will be colored white.</Paragraph>
                <Paragraph>
                Another form a selector can take is it can take the place of a Class. 
                A Class in CSS allows you to apply style properties to HTML that are assigned the same class name. 
                The selector syntax take the form of a period follow by the name of the class. 
                In the example above, we see the .red being utilized. So whever we assign an html element in out html file the class attribute red, the content within that element 
                will take on the specified red class properites. Now that we've created our CSS file, lets apply our style sheet to our html file.
                </Paragraph>
            </Page>

            <Page>
                <Title>Unit 2: Basics of CSS and JavaScript Part 3</Title>
                <Paragraph>To apply our stylesheet to our html file, all that needs to be done is add a link tag within our header. 
                This link tag will allow us to specify the location of the stylesheet so that the html file can apply the styling. 
                We will also add a header into the body to give our webpage a nice logo, as well as some text to demonstrate how we can apply our classes.
                </Paragraph>
                <Image>U2_p3_i1.JPG</Image>
                <Paragraph>All that needs to be done to apply a class to a html element is assign the elements class attribute to our desired class, as shown above. 
                With the CSS applied, we know get the following webpage.
                </Paragraph>
                <Image>U2_p3_i2.JPG</Image>
                <Paragraph>Notice how the logo is written in white text. Because we have not specified a text color for the header in our CSS, the header automatically takes the 
                color property of its parent element. In this case, the header text takes on the same color assigned to the body element.
                </Paragraph>
            </Page>

            <Page>
                <Title>Unit 2: Basics of CSS and JavaScript Part 4</Title>
                <Paragraph>For the final topic in this unit we will quickly touch up on some basics about JavaScript. JavaScript is a programming language that is most commonly used for 
                web applications. Javascript allows programmers to add dynamic functionality to their websites. Javascript can perform computations, manipulate html elements, 
                listen for user interactions, and much more. Without JavaScript or other scripting languages, it is very difficult to add dynamic functionality to your webpage.

                JavaScript is a loosely typed language that will allow you to create variables without needing to specifiy a type. Javasript will automatically assign your variable a 
                type based on what information is assigned to it. The syntax for creating a variable is as follows:</Paragraph>

                <Paragraph>var variableName = value;</Paragraph>
                <Paragraph>The keyword word var is used when a variable is to be declared, the variable name is the name you are assigning to your variable, and the value is the information you are letting your variable hold. 
                Here's a couple examples with different value types.
                </Paragraph>

                <Paragraph>var name = "Fred Flinstone";   //This is a string variable</Paragraph>
                <Paragraph>var number = 5;   //This is a numeric variable</Paragraph>
                <Paragraph>The next thing you will want to learn is how to write a function in JavaScript. A function has the following syntax:</Paragraph>
                <Paragraph>function functionName(parm1, param2, param3) { content of function }</Paragraph>
                <Paragraph>A function is a procedure of instructions that will be run when the function is called. Say we want to write a message when your webpage is loaded. 
                We could do so using function, and call the function as soon as the webpage is loadedd
                </Paragraph>
                <Image>U2_p4_i1</Image>
            </Page>

            <Page>
                <Title>Unit 2: Basics of CSS and JavaScript Part 5</Title>
                <Paragraph>For our last basic Javascript topic, we will learn how to manipulate html elements. Say we use our previous example as before. 
                The webpage would look like this.</Paragraph>
                <Image>U2_p3_i2.JPG</Image>
                <Paragraph>Lets say we want to use Javascript to change the text on the screen after the user clicks the header. 
                We would first need to give our html elements a unique ID. An ID is a unique reference to an html element. 
                By giving our elements an ID, we can allow our Javascript code to locate the specific html element we wish to change. We can do so like this:
                </Paragraph>
                <Image>U2_p5_i1.JPG</Image>
                <Paragraph>Notice the script tage added in the head tag. This will allow us to link our javascript file to our html file. 
                Now, all we need to do is upate our Javascript code.
                </Paragraph>
                <Image>U2_p5_i2.JPG</Image>
                <Paragraph>Walking through the code, we see we have 2 functions, start and clickHeader. On line 15 we say to run the start function as soon as the window is loaded. 
                Upon loading, the start function finds the mainheader in our html code by referencing its ID, and will listen for when the user clicks the header. 
                If the header gets clicked, we call the clickHeader function. Once the clickHeader function is called, we locate the paragraphs in our html by locating their ID's, 
                and insert our new modified html into the paragraphs. In our case, we are just adding new text. With everything in place, our wepage will now change to this whent he 
                user clicks the header:
                </Paragraph>
                <Image>U2_p5_i3.JPG</Image>
                <Paragraph>Thats it for the basic tags of CSS and JavaScript! You now have the basic knowledge and understanding to build a webpage with some style and dynamic 
                functionality! When you are ready, you can select the second quiz from the navigation menu up top.
                </Paragraph>
            </Page>
        </Unit>

        <Unit>
            <Page>
                <Title>Unit 3: Basics of XML and AJAX Part 1</Title>
                <Paragraph>
                XML stands for eXtensible Markup Language. It is a language used to
                store and transport data. For instance, say you have a website that allows users to view various articles. The
                articles are large, and have a vast ammount of text. One solution of course would be to write the content of
                your article directly into your html for your webpage. If you do this however, it will be very difficult to
                reuse the content of your article on other parts of your webpage. Maybe perhaps you want to make your article
                available to other websites as well. Instead of writing a bunch of text in your html for your article, you could
                instead use XML, which can allow you to store all the text in a simple format. It is also considered good
                practice in the modern age to place large ammounts of text or data in
                other form of data storage. It makes your website structure cleaner, and increases the reusability of your
                content. Lets touch on some of the basics of XML
                </Paragraph>
                <Image>U3_p1_i1.JPG</Image>
                <Paragraph>
                We can see XML following a very similar tag structure to that of HTML.
                Every tag in XML needs a opening and end tag, and every XML document should be declared with the statement shown
                on line 1. You'll notice the names for each tag are arbitrary. This is because XML data storing language. It has
                no defined syntax for its tag names. All that matters is that the XML structure is correct. This means, we can
                name our tags whatever we wish, unlike the pre-defined tag names in HTML. Tags in XML can be nested, allowing
                you to create chains of tags to clearly define to context of your content. You can also add attributes to
                further describe your context.
                </Paragraph>
                <Image>U3_p1_i2.JPG</Image>
            </Page>
            <Page>
                <Title>Unit 3: Basics of XML and AJAX Part 2</Title>
                <Paragraph>
                So now that we understands some basics of how to write XML, lets look
                at how we can use XML in our webpage. The Practice of applying Asynchronous JavaScript And
                XML to a webpage is often refered to as AJAX. This technique makes use of the
                XMLHttpRequest object in order to manipulate what is refered to as the HTML DOM. A Document Object Model(DOM) is
                created by the browser when the webpage is loaded, and it defines all the content within the HTML. To
                JavaScript, the DOM acts as an API to allow Javascript to manipulate it. Let's take a look at our html file real
                quick:
                </Paragraph>
                <Image>U3_p2_i1.JPG</Image>
                <Paragraph>
                You can see we have 2 empty paragraphs with no content. We will use
                AJAX to gather xml data to fill the paragraph tags with content. Here is our JavaScript file:
                </Paragraph>
                <Image>U3_p2_i2.JPG</Image>
                <Paragraph>
                We can see in the start function the creation of a XMLHttpRequest
                object. Remeber, the communication between a web server and a client is Asynchronous, as such we will need to
                listen for when the request is ready to be made. We can do this by using the onreadystatechange property of the
                XMLHttpRequest object. A readyState property of 4 means the request is finished and response is ready. The
                status property is the status number of a request, and a status propery of 200 means it is OK. So, with these
                checks in place, we will use the XMLHttpRequest object to open our data XML file and insert the content. With
                everything in play, we see our webpage is now updated to look like the following:
                </Paragraph>
                <Image>U3_p2_i3.JPG</Image>
                <Paragraph>
                Thats all for the basics of XML and AJAX! You now have the basic
                knowledge and understanding to build utilizing AJAX! When you are ready, you can select the third quiz from the
                navigation menu up top.
                </Paragraph>
            </Page>
        </Unit>
    </LessonContent>
    <Quiz>
        <Unit>
            <MultipleChoice>
                <Question>Which of the following best describes HTML?</Question>
                <A>A programming language that allows programmers to add dynamic functionality to their websites</A>
                <B>A markup language that specifies the structure and content of documents that are displayed in web browsers</B>
                <C>A language to give your website style</C>
                <D>A text editor</D>
                <Answer>B</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following is NOT a defined HTML element?</Question>
                <A>name</A>
                <B>html</B>
                <C>title</C>
                <D>body</D>
                <Answer>A</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following HTML elements is used to place information about the HTML5 document, such as the character set, linked files, and the title of a webpage?</Question>
                <A>ul</A>
                <B>p</B>
                <C>body</C>
                <D>head</D>
                <Answer>D</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following HTML elements defines metadata related to the document?</Question>
                <A>meta</A>
                <B>body </B>
                <C>p</C>
                <D>title</D>
                <Answer>A</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following is the correct way to add a comment in HTML?</Question>
                <A>//This is a comment</A>
                <B>/*This is a comment*/</B>
                <C>#This is a comment</C>
                <D>None of the above</D>
                <Answer>D</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>It is within this tag that the documents body content is placed</Question>
                <A>head</A>
                <B>p</B>
                <C>body</C>
                <D>none of the above</D>
                <Answer>C</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following HTML elements defines a paragraph?</Question>
                <A>meta</A>
                <B>body</B>
                <C>p</C>
                <D>title</D>
                <Answer>C</Answer>
            </MultipleChoice>
        </Unit>

        <Unit>
            <MultipleChoice>
                <Question>Which of the following best describes CSS?</Question>
                <A>A programming language that allows programmers to add dynamic functionality to their websites</A>
                <B>A markup language that specifies the structure and content of documents that are displayed in web browsers</B>
                <C>A language to give your website style</C>
                <D>A text editor</D>
                <Answer>C</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following methods can be used to embed CSS in your HTML code?</Question>
                <A>Using the html style tag</A>
                <B>Using an external syle sheet linked in the head of your html file</B>
                <C>Both A and B are correct</C>
                <D>None of the above</D>
                <Answer>C</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following correctly describes a CSS Selector</Question>
                <A>A selector is used to all the select the html file you wish to style</A>
                <B>A selector is used to change the font-size of text</B>
                <C>A Selector is used to to change the text color</C>
                <D>A Selector allows you to target speciic HTML elements you want to style</D>
                <Answer>D</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following is incorrect about a CSS Class</Question>
                <A>A class allows you to apply style properties to HTML elements that are assigned the same class name</A>
                <B>A class allows you to apply style properties to HTML elements that are assigned an ID equal to the class name</B>
                <C>A class in CSS is written in the form: .ClassName {}</C>
                <D>All of the above are correct</D>
                <Answer>B</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following property value pairs will change the text color to red?</Question>
                <A>color: red; </A>
                <B>text: red;</B>
                <C>textcolor: red;</C>
                <D>backround-color: rainbow;</D>
                <Answer>A</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following best describes JavaScript?</Question>
                <A>A programming language that allows programmers to add dynamic functionality to their websites</A>
                <B>A markup language that specifies the structure and content of documents that are displayed in web browsers</B>
                <C>A language to give your website style</C>
                <D>A text editor</D>
                <Answer>A</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following is incorrect?</Question>
                <A>JavaScript is often used in web development</A>
                <B>JavaScript is a strongly typed language</B>
                <C>JavaScript is a loosely typed language</C>
                <D>Javascript can perform computations, manipulate html elements, and listen for user interactions</D>
                <Answer>B</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following is an incorrect to embed JavaScript in your webpage?</Question>
                <A>Using the HTML script tag</A>
                <B>Using an external javascript file linked in the head of your html file</B>
                <C>Using the HTML style tag</C>
                <D>None of the above</D>
                <Answer>C</Answer>
            </MultipleChoice>
        </Unit>

        <Unit>
            <MultipleChoice>
                <Question>Which of the following best describes XML?</Question>
                <A>A programming language that allows programmers to add dynamic functionality to their websites</A>
                <B>A markup language that specifies the structure and content of documents that are displayed in web browsers</B>
                <C>A language to give your website style</C>
                <D>A language used to store and transport data</D>
                <Answer>D</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following is correct about XML tags?</Question>
                <A>We can name our tags whatever we wish, unlike the pre-defined tag names in HTML</A>
                <B>Attributes can be applied to tags</B>
                <C>Tags in XML can be nested</C>
                <D>All of the above are correct</D>
                <Answer>D</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the is incorrect about the XMLHttpRequest object</Question>
                <A>A readyState property of 4 means the request is finished and response is ready</A>
                <B>A readyState property of 3 means the request is finished and response is ready</B>
                <C>The status property is the status number of a request</C>
                <D>A status propery of 200 means it is OK</D>
                <Answer>B</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>Which of the following is incorrect?</Question>
                <A>XML data an be inserted into your html files using AJAX</A>
                <B>Every tag in XML needs a opening and end tag</B>
                <C>XML is used the same way HTML is used</C>
                <D>XML makes it easy to store and reuse data</D>
                <Answer>C</Answer>
            </MultipleChoice>

            <MultipleChoice>
                <Question>What does AJAX stand for?</Question>
                <A>Asynchronous JavaScript And XML</A>
                <B>Asynchronous Java And XML</B>
                <C>Applied JavaScript And XML</C>
                <D>Asynchronous JavaScript And XMLHttpRequest</D>
                <Answer>A</Answer>
            </MultipleChoice>
        </Unit>
    </Quiz>

</Lesson>